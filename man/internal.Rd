% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internal.R
\name{optimization_function}
\alias{optimization_function}
\alias{filter_spatial_predictors}
\alias{default_distance_thresholds}
\alias{is_binary_response}
\alias{prepare_importance_spatial}
\title{Optimization equation to select spatial predictors}
\usage{
optimization_function(
  x = NULL,
  weight.performance = NULL,
  weight.penalization.n.predictors = NULL,
  optimization.method = "moran.i"
)

filter_spatial_predictors(
  data = NULL,
  predictor.variable.names = NULL,
  spatial.predictors.df = NULL,
  max.cor = 0.5
)

default_distance_thresholds(distance.matrix = NULL)

is_binary_response(x)

prepare_importance_spatial(model)
}
\arguments{
\item{x}{Optimization data frame generated internally by \code{\link[=select_spatial_predictors_sequential]{select_spatial_predictors_sequential()}} or \code{\link[=select_spatial_predictors_recursive]{select_spatial_predictors_recursive()}}. Default: \code{NULL}}

\item{weight.performance}{Numeric between 0 and 1, weight of R-squared in the optimization process. Default: \code{NULL}}

\item{weight.penalization.n.predictors}{Numeric between 0 and 1, weight of the penalization on the number of added spatial predictors. Default: \code{NULL}}

\item{optimization.method}{Character, one of "moran.i", and "p.value". Default: \code{"moran.i"}}

\item{data}{Data frame with a response variable and a set of predictors. Default: \code{NULL}}

\item{predictor.variable.names}{Character vector with the names of the predictive variables. Every element of this vector must be in the column names of \code{data}. Default: \code{NULL}}

\item{spatial.predictors.df}{Data frame of spatial predictors.}

\item{max.cor}{Numeric between 0 and 1, maximum Pearson correlation between any pair of the selected variables. Default: \code{0.50}}

\item{distance.matrix}{Distance matrix. Default: \code{NULL}.}

\item{model}{An importance data frame with spatial predictors, or a model fitted with \code{\link[=rf_spatial]{rf_spatial()}}.}
}
\value{
A numeric vector with the optimization criteria.

A data frame with non-redundant spatial predictors.

A numeric vector with distance thresholds.

A list with importance data frames in different formats depending on whether the model was fitted with \code{\link[=rf]{rf()}} or \code{\link[=rf_repeat]{rf_repeat()}}.
}
\description{
Optimizes the selection of spatial predictors using two different methods: "moran.i", and "p.value".

Removes spatial predictors that are pair-wise correlated with other spatial predictors (which happens when there are several close distance thresholds), and spatial predictors correlated with non-spatial predictors.

Generates four distance thresholds, from 0 to max(distance.matrix)/2.

Prepares variable importance data frames and plots for models fitted with \code{\link[=rf_spatial]{rf_spatial()}}.
}
\details{
The method "moran.i" tries to maximize \verb{1 - Moran's} I while taking into account the R-squared of the model and a penalization on the number of introduced spatial predictors through the expression

(1 - Moran's I) + w1 * rsquared - w2 * penalization

The method "p.value" uses a binary version of the p-values of Moran's I (1 if >= 0.05, 0 otherwise), and uses the expression

max(1 - Moran's I, binary p-value) + w1 * rsquared - w2 * penalization

The "moran.i" method generally selects more spatial predictors than the "p.value" method.
}
\examples{
if(interactive()){

data(
  ecoregions_df,
  ecoregions_distance_matrix,
  ecoregions_numeric_predictors,
  ecoregions_continuous_response
  )

#computing Moran's Eigenvector Maps
spatial.predictors.df <- mem_multithreshold(
  distance.matrix = ecoregions_distance_matrix,
  distance.thresholds = c(0, 1000)
  )

#filtering spatial predictors
spatial.predictors.df <- filter_spatial_predictors(
  data = ecoregions_df,
  predictor.variable.names = ecoregions_numeric_predictors,
  spatial.predictors.df = spatial.predictors.df,
  max.cor = 0.50
 )

 spatial.predictors.df


}
if(interactive()){

 #loading example distance matrix
 data(ecoregions_distance_matrix)

 #computing set of default distance thresholds
 default_distance_thresholds(ecoregions_distance_matrix)

 }
if(interactive()){

#loading example data
data(
  ecoregions_df,
  ecoregions_distance_matrix,
  ecoregions_numeric_predictors,
  ecoregions_continuous_response
  )

 #fittind spatial model
 model <- rf_spatial(
   data = ecoregions_df,
   dependent.variable.name = ecoregions_continuous_response,
   predictor.variable.names = ecoregions_numeric_predictors,
   distance.matrix = ecoregions_distance_matrix,
   distance.thresholds =  0,
   n.cores = 1
 )

 #preparing the importance data frame
 importance <- prepare_importance_spatial(model)
 names(importance)

}
}
\seealso{
\code{\link[=select_spatial_predictors_recursive]{select_spatial_predictors_recursive()}}, \code{\link[=select_spatial_predictors_sequential]{select_spatial_predictors_sequential()}}
}
\keyword{internal}
