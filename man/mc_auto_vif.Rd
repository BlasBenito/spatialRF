% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc_auto_vif.R
\name{mc_auto_vif}
\alias{mc_auto_vif}
\title{Automated multicollinearity reduction via Variance Inflation Factor}
\usage{
mc_auto_vif(
  data = NULL,
  predictors.names = NULL,
  response.name = NULL,
  preference.order = NULL,
  max.vif = 5,
  verbose = TRUE
)
}
\arguments{
\item{data}{(required; data.frame or tibble) A data frame, tibble, or sf. Default: \code{NULL}.}

\item{predictors.names}{(optional; character vector) Character vector with the names of the predictive variables. Every element of this vector must be in the column names of \code{data}. If \code{NULL}, all the columns in data except \code{response.name} are used. Default: \code{NULL}}

\item{response.name}{(optional; character string) Name of the dependent variable. Required when there are categorical variables within \code{predictors.names}. Default: \code{NULL}}

\item{preference.order}{(optional, character vector) Character vector indicating the preference order to protect variables from elimination.  Predictors not included in this argument are ranked by their VIFs. Default: \code{NULL}.}

\item{max.vif}{(optional, numeric) Numeric with recommended values between 2.5 and 10 defining the maximum VIF allowed in the output dataset. Higher VIF thresholds should result in a higher number of selected variables. Default: \code{5}.}

\item{verbose}{(optional, logical) Logical. if \code{TRUE}, \code{mc_auto_vif()} prints messages describing its operations on the input data. Default:: \code{TRUE}}
}
\value{
Character vector with the names of uncorrelated predictors.
}
\description{
Warning: input predictors with a pairwise correlation very close to 1 might create issues during VIF computation. If that's the case, please apply \code{\link[=mc_auto_cor]{mc_auto_cor()}} before.

Warning: near-zero variance columns are ignored by this function.

The Variance Inflation Factor for a given variable \code{y} is computed as \code{1/(1-R2)}, where \code{R2} is the multiple R-squared of a multiple regression model fitted using \code{y} as response and all the remaining variables of the input data set as predictors. The equation can be interpreted as "the rate of perfect model's R-squared to the unexplained variance of this model".

The possible range of VIF values is (1, Inf]. A VIF lower than 10 suggest that removing \code{y} from the data set would reduce overall multicollinearity. The recommended thresholds for maximum VIF may vary depending on the source consulted, being the most common values, 2.5, 5, and 10.

The function \code{mc_auto_vif()} applies a recursive algorithm to remove variables with a VIF higher than a given threshold (defined by the argument \code{max.vif}).

The function allows the user to define a preference selection order via the argument \code{preference.order}. This argument helps "protect" variables that might be interesting or even required for the given analysis. Please, see the examples to understand better how this feature works.

If there are categorical variables named in \code{predictors.names} and \code{response.name} is provided, then the function applies \code{\link[=fe_target_encoding]{fe_target_encoding()}} with the method "mean" to transform the categorical variables into numeric before the VIF analysis
}
\examples{
if(interactive()){

data(
  ecoregions_df,
  ecoregions_continuous_response,
  ecoregions_numeric_predictors,
  ecoregions_all_predictors
)

#NUMERIC PREDICTORS ONLY
################################


#automatic VIF reduction with low max.vif
#-------------------------------
selected.predictors <- mc_auto_vif(
  data = ecoregions_df,
  predictors.names = ecoregions_numeric_predictors,
  max.vif = 2
)

#check vif of the resulting dataset
#variance inflation factor
vif(data = ecoregions_df[, selected.predictors])

#a small number of predictors is selected
length(selected.predictors)


#automatic VIF reduction with high max.vif
#-------------------------------
selected.predictors <- mc_auto_vif(
  data = ecoregions_df,
  predictors.names = ecoregions_numeric_predictors,
  max.vif = 10
)

#a larger number of predictors is selected
length(selected.predictors)


#supervised VIF reduction
#------------------------------------------------
#1. Notice that "fragmentation_ca" is selected
#even though it has the maximum VIF in the dataset
#2. "climate_bio12_average" is excluded from the result
#because it's highly correlated to "climate_bio1_average"
selected.predictors <- mc_auto_vif(
  data = ecoregions_df,
  predictors.names = ecoregions_numeric_predictors,
  preference.order = c(
    "fragmentation_ca",
    "climate_bio1_average",
    "climate_bio12_average"
  )
)


#using quantitative criteria as preference.order
#-----------------------------------------------
#computing univariate correlation between each predictor and the response
preference.order <- apply(
  X = ecoregions_df[, ecoregions_numeric_predictors],
  MARGIN = 2,
  FUN = function(x){
    cor(
      x = x,
      y = ecoregions_df[, ecoregions_continuous_response]
      )
    }
  )

#sorting from maximum to minimum and getting names only
preference.order <- names(
  sort(
    preference.order,
    decreasing = TRUE
    )
  )

#using it in mc_auto_vif as preference.order
selected.predictors <- mc_auto_vif(
  data = ecoregions_df,
  predictors.names = ecoregions_numeric_predictors,
  preference.order = preference.order
)


#using mc_auto_vif and mc_auto_cor together
#-----------------------------------------------
mc_auto_cor.result <- mc_auto_cor(
  data = ecoregions_df,
  predictors.names = ecoregions_numeric_predictors,
  preference.order = preference.order,
  max.cor = 0.75
)

selected.predictors <- mc_auto_vif(
  data = ecoregions_df,
  predictors.names = mc_auto_cor.result,
  preference.order = preference.order
)

#NUMERIC AND CATEGORICAL PREDICTORS
#-----------------------------------

#there are two categorial predictors in the dataset below
class(ecoregions_df$dominant_landcover)
class(ecoregions_df$primary_productivity)

#these variables are included in the vector ecoregions_all_predictors
ecoregions_all_predictors[45:46]

#automatic VIF reduction using target-encoding for categorical predictors
#---------------------------------------------------
#requires the name of the response to compute the target-encoding
selected.predictors <- mc_auto_vif(
  data = ecoregions_df,
  response.name = ecoregions_continuous_response,
  predictors.names = ecoregions_all_predictors
)

#both categorical predictors have been selected
ecoregions_all_predictors[45:46] \%in\% selected.predictors


#applying target-encoding before vif
#---------------------------------------------------
#if you wish more control over the target-encoding
#you can apply fe_target_encoding() to your categoricals
#with the desired method before the vif
data.encoded <- fe_target_encoding(
  data = ecoregions_df,
  response.name = ecoregions_continuous_response,
  predictors.names = ecoregions_all_predictors,
  methods = "mean",
  replace = TRUE
)

#now the function does not require the response's name
selected.predictors <- mc_auto_vif(
  data = data.encoded,
  predictors.names = ecoregions_all_predictors
)

#both categorical predictors have been selected again
ecoregions_all_predictors[45:46] \%in\% selected.predictors


}
}
\seealso{
\code{\link[=mc_auto_cor]{mc_auto_cor()}}
}
