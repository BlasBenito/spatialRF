% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf.R
\name{rf}
\alias{rf}
\title{rf}
\usage{
rf(
  data = NULL,
  dependent.variable.name = NULL,
  predictor.variable.names = NULL,
  distance.matrix = NULL,
  distance.thresholds = NULL,
  ranger.arguments = list(mtry = NULL, min.node.size = NULL, max.depth = NULL,
    importance = "permutation", scale.permutation.importance = TRUE, local.importance =
    FALSE, write.forest = TRUE, replace = TRUE, sample.fraction = ifelse(replace, 1,
    0.632), case.weights = NULL, num.threads = parallel::detectCores() - 1, save.memory =
    FALSE, verbose = TRUE),
  trees.per.variable = NULL,
  scaled.importance = TRUE,
  seed = NULL
)
}
\arguments{
\item{data}{(required) data frame with a response variable and a set of (preferably uncorrelated) predictors, Default: NULL}

\item{dependent.variable.name}{(required) string with the name of the response variable. Must be in the column names of 'data', Default: NULL}

\item{predictor.variable.names}{(required) character vector with the names of the predictive variables. Every element must be in the column names of 'data', Default: NULL}

\item{distance.matrix}{(optional) a squared matrix with the distances among the records in 'data'. Notice that the rows of 'distance.matrix' and 'data' must be the same. If not provided, the computation of the Moran's I of the residuals is ommited. Default: NULL``}

\item{distance.thresholds}{(optional) numeric vector, distances below each value in the distance matrix are set to 0 for the computation of Moran's I. If NULL, it defaults to seq(0, max(distance.matrix), length.out = 4). Default: NULL.}

\item{ranger.arguments}{(optional) list with \link[ranger]{ranger} arguments. All \link[ranger]{ranger} arguments are set to their default values except for 'importance', that is set to 'permutation' rather than 'none'. Please, consult the help file of \link[ranger]{ranger} if you are not familiar with the arguments of this function.}

\item{trees.per.variable}{(optional) number of individual regression trees to fit per variable in 'predictor.variable.names'. This is an alternative way to define ranger's 'num.trees'. If NULL, 'num.trees' is 500. Default: NULL}

\item{scaled.importance}{(optional) boolean. If TRUE, and 'importance = "permutation', the function scales 'data' with \link{scale_robust} and fits a new model to compute scaled variable importance scores. Default: TRUE}

\item{seed}{(optional) integer, random seed to facilitate reproducibility. If set to a given number, the returned model is always the same. Default: NULL}
}
\value{
a ranger model with several new slots:
\itemize{
\item \code{ranger.arguments}: stores the values of the arguments used to fit the ranger model.
\item \code{variable.importance}: a list containing the vector of variable importance as originally returned by ranger (scaled or not depending on the value of 'scaled.importance'), a data frame with the predictors ordered by their importance, and a ggplot showing the importance values.
\item \code{pseudo.r.squared}: computed as the correlation between the observations and the predictions.
\item \code{rmse}: as computed by \link{root_mean_squared_error} with 'normalization = NULL'.
\item \code{nrmse}: as computed by \link{root_mean_squared_error} with 'normalization = "iq'.
\item \code{residuals}: computed as observations minus predictions.
\item \code{spatial.correlation.residuals}: the result of \link{moran_multithreshold}.
}
}
\description{
a convenient wrapper for \link[ranger]{ranger} that completes its output by providing the Moran's I of the residuals for different distance thresholds, the rmse and nrmse (as computed by \link{root_mean_squared_error}), and variable importance scores based on a scaled version of the data generated by \link{scale_robust}.
}
\details{
Please read the help file of \link[ranger]{ranger} for further details.
}
\examples{
\dontrun{
if(interactive()){
 data("plant_richness_df")
 data("distance_matrix")
 out <- rf(
   data = plant_richness_df,
   dependent.variable.name = "richness_species_vascular",
   predictor.variable.names = colnames(plant_richness_df)[5:21],
   distance.matrix = distance_matrix,
   distance.thresholds = c(0, 100, 1000, 10000)
 )

 class(out)

 #data frame with ordered variable importance
 out$variable.importance$df

 #variable importance plot
 out$variable.importance$plot

 #pseudo R-squared
 out$pseudo.r.squared

 #rmse and nrmse
 out$rmse
 out$nrmse

 #spatial correlation of the residuals for different distance thresholds
 out$spatial.correlation.residuals$df

 #plot of the Moran's I of the residuals for different distance thresholds
 out$spatial.correlation.residuals$plot
 }
}
}
