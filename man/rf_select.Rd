% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_select.R
\name{rf_select}
\alias{rf_select}
\title{Selects set of predictors with maximum predictive performance for Random Forest models}
\usage{
rf_select(
  model = NULL,
  xy = NULL,
  repetitions = 30,
  training.fraction = 0.75,
  max.vif = 5,
  max.cor = 0.75,
  distance.step = NULL,
  distance.step.x = NULL,
  distance.step.y = NULL,
  fill.color = viridis::viridis(5, option = "F", direction = 1, alpha = 1, end = 0.9),
  seed = 1,
  verbose = TRUE,
  n.cores = parallel::detectCores() - 1,
  cluster = NULL
)
}
\arguments{
\item{model}{Model fitted with \code{\link[=rf]{rf()}} and/or \code{\link[=rf_spatial]{rf_spatial()}}. The function doesn't work with models fitted with \code{\link[=rf_repeat]{rf_repeat()}}. Default: \code{NULL}}

\item{xy}{Data frame or matrix with two columns containing coordinates and named "x" and "y". If \code{NULL}, the function will throw an error. Default: \code{NULL}}

\item{repetitions}{Integer, number of spatial folds to use during cross-validation. Must be lower than the total number of rows available in the model's data. Default: \code{30}}

\item{training.fraction}{Proportion between 0.5 and 0.9 indicating the proportion of records to be used as training set during spatial cross-validation. Default: \code{0.75}}

\item{max.vif}{Numeric between 2.5 and 10 defining the selection threshold for the VIF analysis. Higher numbers result in a more relaxed variable selection. Lower values increase the number of predictors returned. If \code{NULL}, VIF analysis to reduce multicollinearity is disabled. Default: \code{5}.}

\item{max.cor}{Numeric between 0 and 1, with recommended values between 0.5 and 0.9. Maximum Pearson correlation between any pair of the selected variables. Higher values increase the number of predictors returned. If \code{NULL}, bivariate filtering is disabled. Default: \code{0.75}}

\item{distance.step}{Numeric, argument \code{distance.step} of \code{\link[=thinning_til_n]{thinning_til_n()}}. distance step used during the selection of the centers of the training folds. These fold centers are selected by thinning the data until a number of folds equal or lower than \code{repetitions} is reached. Its default value is 1/1000th the maximum distance within records in \code{xy}. Reduce it if the number of training folds is lower than expected.}

\item{distance.step.x}{Numeric, argument \code{distance.step.x} of \code{\link[=make_spatial_folds]{make_spatial_folds()}}. Distance step used during the growth in the x axis of the buffers defining the training folds. Default: \code{NULL} (1/1000th the range of the x coordinates).}

\item{distance.step.y}{Numeric, argument \code{distance.step.x} of \code{\link[=make_spatial_folds]{make_spatial_folds()}}. Distance step used during the growth in the y axis of the buffers defining the training folds. Default: \code{NULL} (1/1000th the range of the y coordinates).}

\item{fill.color}{Character vector with hexadecimal codes (e.g. "#440154FF" "#21908CFF" "#FDE725FF"), or function generating a palette (e.g. \code{viridis::viridis(100)}). Default: \code{viridis::viridis(100, option = "F", direction = -1, alpha = 0.8, end = 0.9)}}

\item{seed}{Integer, random seed to facilitate reproduciblity. If set to a given number, the results of the function are always the same. Default: \code{1}.}

\item{verbose}{Logical. If \code{TRUE}, messages and plots generated during the execution of the function are displayed, Default: \code{TRUE}}

\item{n.cores}{Integer, number of cores used by \code{\link[ranger]{ranger}} for parallel execution (used as value for the argument \code{num.threads} in \code{ranger()}). Default: \code{parallel::detectCores() - 1}}

\item{cluster}{A cluster definition generated with \code{parallel::makeCluster()} or \code{\link{start_cluster}}. Faster than using \code{n.cores} for smaller models. If provided, overrides \code{n.cores}. The function does not stop a cluster, please remember to shut it down with \code{parallel::stopCluster(cl = cluster_name)} or \code{\link{stop_cluster}} at the end of your pipeline. Default: \code{NULL}}
}
\value{
A model of the class "rf" fitted with the selected variables by the function \code{\link[=rf]{rf()}} with a slot named \code{selection}. This slot contains the following elements:
\itemize{
\item \code{selection.plot}: a ggplot with the selection criteria.
\item \code{selection.df}: a data frame with the data used for the selection plot.
\item \code{cor}: correlation matrix of the selected variables.
\item \code{vif}: data frame with the names of the selected variables and their respective VIF scores.
\item \code{selected.variables}: character vector with the names of the selected variables.
}

This model can be used as input for other modelling functions such as \code{\link[=rf]{rf()}}, \code{\link[=rf_repeat]{rf_repeat()}}, \code{\link[=rf_tuning]{rf_tuning()}}, \code{\link[=rf_spatial]{rf_spatial()}}, \code{\link[=rf_evaluate]{rf_evaluate()}}, and \code{\link[=rf_jackknife]{rf_jackknife()}}.
}
\description{
If the argument model does not have a \code{"jackknife"} slot, then the function runs \code{\link[=rf_jackknife]{rf_jackknife()}}. The function removes collinear predictors, and ranks the remaining ones using the jackknife results. Then, these predictors are added one by one to the model, until a maximum performance is achieved.

The output of this function is a model of the class "rf" fitted with the selected variables, that can be used as input in the argument \code{model} of most modelling functions of this package. This model has a slot named \code{"selection"} with the selection results.
}
\examples{

if(interactive()){

#loading example data
data(
 ecoregions_df,
 ecoregions_distance_matrix,
 ecoregions_predictor_variable_names,
 ecoregions_dependent_variable_name
)

}

}
