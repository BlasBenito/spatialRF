% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response_surfaces.R
\name{response_surfaces}
\alias{response_surfaces}
\title{response_surfaces}
\usage{
response_surfaces(
  model = NULL,
  a = NULL,
  b = NULL,
  quantiles = c(0.1, 0.5, 0.9),
  grid.resolution = 100,
  point.size.range = c(0.5, 2.5)
)
}
\arguments{
\item{model}{A model fitted with \code{\link[=rf]{rf()}}, \code{\link[=rf_repeat]{rf_repeat()}}, or \code{\link[=rf_spatial]{rf_spatial()}}.}

\item{a}{Character string, name of a model predictor. If \code{NULL}, the most important variable in \code{model} is selected. Default: \code{NULL}.}

\item{b}{Character string, name of a model predictor. If \code{NULL}, the second most important variable in \code{model} is selected. Default: \code{NULL}.}

\item{quantiles}{Numeric vector between 0 and 1. Argument \emph{probs} of the function \link[stats]{quantile}. Quantiles to set the other variables to. Default: c(0.1, 0.5, 0.9)}

\item{grid.resolution}{Integer between 20 and 500. Resolution of the plotted surface Default: 100}

\item{point.size.range}{Numeric vector of length 2 with the range of point sizes used by \link[ggplot2]{geom_point}, Default: c(0.5, 2.5)}
}
\value{
A list with slots named after the selected \code{quantiles} with a ggplot.
}
\description{
Plots response surfaces for a given pair of predictors from an \code{\link[=rf]{rf()}}, \code{\link[=rf_repeat]{rf_repeat()}}, or an \code{\link[=rf_spatial]{rf_spatial()}} model.
}
\details{
All variables that are not \code{a} or \code{b} are set to the values of their respective quantiles to plot the response surfaces. The output list can be plotted all at once with \code{patchwork::wrap_plots(p)} or \code{cowplot::plot_grid(plotlist = p)}, or one by one by extracting each plot from the list.
}
\examples{
\dontrun{
if(interactive()){
data(plant_richness_df)

m <- rf(
 data = plant_richness_df,
 dependent.variable.name = "richness_species_vascular",
 predictor.variable.names = colnames(plant_richness_df)[5:21],
 verbose = FALSE
)

p <- response_surfaces(model = m)
 }
}
}
