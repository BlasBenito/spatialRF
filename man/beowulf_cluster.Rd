% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/beowulf_cluster.R
\name{beowulf_cluster}
\alias{beowulf_cluster}
\title{Generates a cluster definition}
\usage{
beowulf_cluster(
  cluster.ips = NULL,
  cluster.cores = NULL,
  cluster.user = Sys.info()[["user"]],
  cluster.port = "11000"
)
}
\arguments{
\item{cluster.ips}{Character vector with the IPs of the machines in the cluster. The first machine will be considered the main node of the cluster, and will generally be the machine on which the R code is being executed. Default: \code{NULL}.}

\item{cluster.cores}{Numeric integer vector, number of cores on each machine. Default: \code{NULL}.}

\item{cluster.user}{Character string, name of the user (should be the same throughout machines), Defaults to the current system user.}
}
\value{
A list ready to be used as input for the \code{spec} argument of the function \link[parallel]{makeCluster}.
}
\description{
Defines a Beowulf cluster for \link[parallel]{makeCluster} from the IPs of the machines in the cluster, the number of cores of each machine, and the user name.
}
\details{
This function is used internally by several other functions in the package, but can be useful for a user working with \link[foreach]{foreach} to parallelize loops in a small cluster.
}
\examples{
\donttest{

#cluster.specification <- beowulf_cluster(
#  cluster.ips = c(
#    "10.42.0.1",
#    "10.42.0.34",
#    "10.42.0.104"
#  ),
# cluster.cores = c(7, 4, 4),
# cluster.user = "blas"
#)
#
#my.cluster <- parallel::makeCluster(
#  master = "10.42.0.1",
#  spec = cluster.specification,
#  port = "11000",
#  homogeneous = TRUE
#)

doParallel::registerDoParallel(cl = my.cluster)

#PARALLELIZED foreach LOOP HERE

parallel::stopCluster(cl = my.cluster)

}

}
