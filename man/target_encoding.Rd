% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/target_encoding.R
\name{target_encoding}
\alias{target_encoding}
\title{Target encoding of character and factor variables}
\usage{
target_encoding(
  data = NULL,
  dependent.variable.name = NULL,
  predictor.variable.names = NULL
)
}
\arguments{
\item{data}{(required; data frame, tibble, or sf) A training data frame. Default: \code{NULL}}

\item{dependent.variable.name}{(required; character string) Name of the response. Must be a column name of \code{data}. Default: \code{NULL}}

\item{predictor.variable.names}{(required; character vector). Names of all the predictors in \code{data}.  Default: \code{NULL}}
}
\value{
A list with two slots:
\itemize{
\item \code{data}: Input data frame, but with target-encoded character or factor columns.
\item \code{encoding_maps}: List with slots named after the variables in \code{predictor.variable.names} that have been target encoded. Each slot contains a data frame with the old and new values of each target-encoded variable.
}
}
\description{
Converts character and factor variables to numeric. For each character or factor column, it replaces each value with the corresponding mean of the response column (as defined by the argument \code{dependent.variable.name}). For example, if the response column has the values 1, 2, 3, and 4, and the character column has the values "a", "a", "b", and "b", then "a" is replaced with 1.5, and "b" is replaced by 3.5.

Target encoding facilitates using any kind of character or factor variable as numeric.
}
\examples{
if(interactive()){

x <- target_encoding(
  data = ecoregions_df,
  dependent.variable.name = ecoregions_continuous_response,
  predictor.variable.names = ecoregions_all_predictors
  )

x$data

x$encoding_maps

}
}
