% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fe_target_encoding.R
\name{fe_target_encoding}
\alias{fe_target_encoding}
\alias{fe_target_encoding_noise}
\title{Target encoding of character and factor variables}
\usage{
fe_target_encoding(
  data = NULL,
  dependent.variable.name = NULL,
  predictor.variable.names = NULL,
  methods = c("mean", "rank", "rnorm", "loo"),
  sd.width = 0.1,
  seed = 1,
  noise = 0,
  verbose = TRUE
)

fe_target_encoding_noise(data, categorical.variable.name, noise = 0, seed = 1)
}
\arguments{
\item{data}{(required; data frame, tibble, or sf) A training data frame. Default: \code{NULL}}

\item{dependent.variable.name}{(required; character string) Name of the response. Must be a column name of \code{data}. Default: \code{NULL}}

\item{predictor.variable.names}{(required; character vector). Names of all the predictors in \code{data}. Only character and factor predictors are processed, but all are returned in the "data" slot of the function's output.  Default: \code{NULL}}

\item{methods}{(optional; character string). Name of the target encoding methods. Default: \code{c("mean", "rank", "rnorm", "loo")}}

\item{sd.width}{(optional; numeric) Only for the method "rnorm". Numeric in the range 0.01-1. Default: \code{0.1}}

\item{seed}{(optional; integer) Random seed to facilitate reproducibility. Default: \code{1}}

\item{noise}{(optional; numeric) Only in methods "mean" and "rank". Numeric in the range 0-1. Default: \code{0}.}

\item{verbose}{(optional; logical) If TRUE, messages and plots generated during the execution of the function are displayed. Default: \code{TRUE}}
}
\value{
If no target encoding is needed because all predictors are numeric, the function returns \code{data}. Otherwise it returns a list of the class "fe_target_encoding" with the slots:
\itemize{
\item \code{data}: Input data frame, but with target-encoded character or factor columns.
\item \code{leakage_test}: Data frame with the results of a linear model between the target-encoded variable and the response aimed to identify potential data leakage. It contains the following columns:
\itemize{
\item \code{encoded_predictor}: name of the target-encoded variable.
\item \code{correlation_with_response}: R-squared resulting from \code{cor.test()} on the target-encoded variable and the response.
\item \code{interpretation}: Interpretation of the test, with the values "Leakage", "Likely leakage", "Unlikely leakage", and "No leakage". If you find concerning results, you may either increase the value of the \code{noise} argument (if \code{method = "mean"}), or select the "rnorm" method.
}
}
}
\description{
Target encoding involves replacing the values of categorical variables with continuous values that are indicative of the response variable. There are several approaches to target encoding, including calculating the mean target value for each level of the categorical variable. Target encoding can be useful for improving the performance of machine learning models, but it can also introduce bias if the encoded values are not representative of the true underlying relationship between the categorical variables and the target.

This function identifies categorical variables in the input data frame, transforms them using a set of methods defined by the user, and returns the input data frame with the newly encoded variables.

The target encoding methods implemented in this function are:

#' \itemize{
\item \code{rank}: returns the order of the group as a integer, being the 1 the rank of the group with the lower mean of of the response variable. This method accepts the  \code{noise} argument, which adds white noise to the result to increase data variability and reduce leakage. The variables returned by this method are named with the suffix "__encoded_rank". This method is implemented in the function \code{\link[=fe_target_encoding_rank]{fe_target_encoding_rank()}}.
\item \code{mean}: uses the mean value of the response over each group in the categorical variable. This option accepts \code{noise}. The variables returned by this method are named with the suffix "__encoded_mean".  This method is implemented in the function \code{\link[=fe_target_encoding_mean]{fe_target_encoding_mean()}}.
\item \code{rnorm}: This method computes the mean and standard deviation of the response for each group of the categorical variable, and uses \code{\link[=rnorm]{rnorm()}} to generate values taken from a normal distribution. The argument \code{sd.width} is used as a multiplier of the standard deviation to reduce the range of values produced by \code{\link[=rnorm]{rnorm()}} for each group of the categorical predictor. The variables returned by this method are named with the suffix "__encoded_rnorm".  This method is implemented in the function \code{\link[=fe_target_encoding_rnorm]{fe_target_encoding_rnorm()}}.
\item \code{loo}: This is the leave-one-out method. Each categorical value is replaced with the mean of the response variable across the other cases within the same group. The variables returned by this method are named with the suffix "__encoded_loo". This method is implemented in the function \code{\link[=fe_target_encoding_loo]{fe_target_encoding_loo()}}.
}

The methods "mean" and "rank" support the \code{noise} argument. Values larger than zero in this argument add white noise to the target-encoded variables using \code{stats::rnorm()} via the function \code{\link[=fe_target_encoding_noise]{fe_target_encoding_noise()}}). The \code{noise} argument represents a fraction of the average differences between groups of the target-encoded variable. For example, if noise = 0.25 and the target-encoded variable has the unique values c(1, 2, 3), as it could be the case when using the "rank" method, then the average between-groups difference would be 1, and the range of the noise added to each row would go between 0 and 0.25

The method "rnorm" has the argument \code{sd.width}, which multiplies the standard deviation argument of the \code{rnorm()} function to limit the spread of the encoded values between groups.
}
\examples{
if(interactive()){
}
}
