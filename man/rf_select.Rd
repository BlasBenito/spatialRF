% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_select.R
\name{rf_select}
\alias{rf_select}
\title{Selects predictors for Random Forest models}
\usage{
rf_select(
  model = NULL,
  data = NULL,
  dependent.variable.name = NULL,
  predictor.variable.names = NULL,
  preference.order = NULL,
  distance.matrix = NULL,
  distance.thresholds = NULL,
  xy = NULL,
  ranger.arguments = NULL,
  vif.threshold = 5,
  cor.threshold = 0.75,
  repetitions = 1,
  jackknife = FALSE,
  seed = 1,
  verbose = TRUE,
  n.cores = parallel::detectCores() - 1,
  cluster = NULL
)
}
\arguments{
\item{model}{A model fitted with \code{\link[=rf]{rf()}} or \code{\link[=rf_spatial]{rf_spatial()}}. If provided, the data and ranger arguments are taken directly from the model definition (stored in \code{model$ranger.arguments}). Default: \code{NULL}}

\item{data}{Data frame with a response variable and a set of predictors. Default: \code{NULL}}

\item{dependent.variable.name}{Character string with the name of the response variable. Must be in the column names of \code{data}. If the dependent variable is binary with values 1 and 0, the argument \code{case.weights} of \code{ranger} is populated by the function \code{\link[=case_weights]{case_weights()}}. Default: \code{NULL}}

\item{predictor.variable.names}{Character vector with the names of the predictive variables. Every element of this vector must be in the column names of \code{data}. Default: \code{NULL}}

\item{preference.order}{Character vector indicating the user's order of preference to keep variables. Predictors not included in this argument are ranked at random (with rank scores below those predictors in \code{preference.order}). If not provided, the predictors are ranked by their univariate RMSE on the out-of-bag data. Default: \code{NULL}.}

\item{distance.matrix}{Squared matrix with the distances among the records in \code{data}. The number of rows of \code{distance.matrix} and \code{data} must be the same. If not provided, the computation of the Moran's I of the residuals is omitted. Default: \code{NULL}}

\item{distance.thresholds}{Numeric vector with neighborhood distances. All distances in the distance matrix below each value in \code{dustance.thresholds} are set to 0 for the computation of Moran's I. If \code{NULL}, it defaults to seq(0, max(distance.matrix), length.out = 4). Default: \code{NULL}}

\item{xy}{(optional) Data frame or matrix with two columns containing coordinates and named "x" and "y". It is not used by this function, but it is stored in the slot \code{ranger.arguments$xy} of the model, so it can be used by \code{\link[=rf_evaluate]{rf_evaluate()}} and \code{\link[=rf_tuning]{rf_tuning()}}. Default: \code{NULL}}

\item{ranger.arguments}{Named list with \link[ranger]{ranger} arguments (other arguments of this function can also go here). All \link[ranger]{ranger} arguments are set to their default values except for 'importance', that is set to 'permutation' rather than 'none'. Please, consult the help file of \link[ranger]{ranger} if you are not familiar with the arguments of this function.}

\item{vif.threshold}{Numeric between 2.5 and 10 defining the selection threshold for the VIF analysis. Higher numbers result in a more relaxed variable selection. Lower values increase the number of predictors returned. Set this argument to 0 if you desire to disable the VIF filtering. Default: 5.}

\item{cor.threshold}{Numeric between 0 and 1, with recommended values between 0.5 and 0.9. Maximum Pearson correlation between any pair of the selected variables. Higher values increase the number of predictors returned. Set this argument to 1 if you desire to disable the bivariate-correlation filtering. Default: \code{0.50}}

\item{repetitions}{Integer. Number of times to repeat random forest models with different random seeds (see the \code{repetitions} argument of \code{\link[=rf_repeat]{rf_repeat()}}). Values higher than 10 will yield more robust results but at a higher computational cost. Default: \code{1}}

\item{jackknife}{Logical. If \code{TRUE}, the function fits a full model with all the selected variables, and one model without each variable, and compares their respective performances. Only variables that decrease performance when removed from the model are kept in the final selection. Default: \code{FALSE}}

\item{seed}{Integer, random seed to facilitate reproduciblity. If set to a given number, the results of the function are always the same. Default: \code{1}.}

\item{verbose}{Logical, ff \code{TRUE}, messages and plots generated during the execution of the function are displayed, Default: \code{TRUE}}

\item{n.cores}{Integer, number of cores used by \code{\link[ranger]{ranger}} for parallel execution of individual random forest models (used as value for the argument \code{num.threads} in \code{ranger()}). Default: \code{parallel::detectCores() - 1}}

\item{cluster}{A cluster definition generated with \code{parallel::makeCluster()} or \code{\link{make_cluster}}. If provided, overrides \code{n.cores}. The function does not stop a cluster, please remember to shut it down with \code{parallel::stopCluster(cl = cluster_name)} or \code{spatialRF::stop_cluster()} at the end of your pipeline. Default: \code{NULL}}
}
\value{
A model of the class "rf" fitted with the selected variables by the function \code{\link[=rf]{rf()}} with a slot named \code{variable.selection}. This slot contains the following elements:
\itemize{
\item \code{univariate.importance}: a data frame with the names of the predictors and their univariate out-of-bag RMSE. This slot will be \code{NA} if the argument \code{preference.order} is provided.
\item \code{jackknife.result}: a data frame with the results of the jackknife when \code{jackknife = TRUE}, or \code{NA} otherwise.
\item \code{cor}: correlation matrix of the selected variables.
\item \code{vif}: data frame with the names of the selected variables and their respective VIF scores.
\item \code{selected.variables}: character vector with the names of the selected variables.
}

This model can be used as input for other modelling functions such as \code{\link[=rf]{rf()}}, \code{\link[=rf_repeat]{rf_repeat()}}, \code{\link[=rf_tuning]{rf_tuning()}}, \code{\link[=rf_spatial]{rf_spatial()}}, \code{\link[=rf_evaluate]{rf_evaluate()}}, and \code{\link[=rf_jackknife]{rf_jackknife()}}.
}
\description{
Combines the functions\code{\link[=auto_cor]{auto_cor()}}, and \code{\link[=auto_vif]{auto_vif()}} to select a set of uncorrelated predictors. These predictors can either be ranked by their univariate effect on the response variable (a.k.a "auto mode"), or prioritized according to the user's preferences via the \code{preference.order} argument. In the "auto mode", a univariate random forest model is fitted for each predictor in \code{predictor.variable.names}, and its out-of-bag RMSE is stored. All variables are then ranked by their RMSE (from minimum to maximum), and their rankings are used as \code{preference.order} in the functions \code{\link[=auto_cor]{auto_cor()}}, and \code{\link[=auto_vif]{auto_vif()}}. If the user provides the \code{preference.order} argument, a redundant variable is removed when there is a similar one with a higher priority.

When the argument \code{jackknife} is set to \code{TRUE}, the function fits a random forest with all uncorrelated variables, and random forest models without each variable  to compute the out-of-bag RMSE gained or lost when each variable is removed from the model. Finally, a model fitted with all the variables that decrease performance when removed from the model is compared with a model fitted with all the uncorrelated variables. The model with better performance is then returned.

Setting \code{jackknife = TRUE} is recommended when your goal is obtaining the minimum set of variables with the better model performance.

The output of this function is a model of the class "rf" fitted with the selected variables, that can be used as input in the argument \code{model} of most modelling functions of this package.
}
\examples{

if(interactive()){

#loading example data
data(
 ecoregions_df,
 ecoregions_distance_matrix,
 ecoregions_predvar_names,
 ecoregions_depvar_name
)

#automatic variable selection
rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
 xy = ecoregions_df[, c("x", "y")],
 n.cores = 1
)

#the result is a model!
plot_importance(rf.selection)
print_performance(rf.selection)

#you can use this model as input for other functions
rf.selection <- rf_evaluate(
 model = rf.selection
)
#or you can connect it with other modelling functions using the \%>\% p√¨pe
rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
 xy = ecoregions_df[, c("x", "y")],
n.cores = 1
) \%>\%
 rf_evaluate()
#example of complete pipeline (this will take a while to execute)
cl <- make_cluster()

rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
 distance.matrix = ecoregions_distance_matrix,
 xy = ecoregions_df[, c("x", "y")],
 n.cores = 1
) \%>\%
 rf_tuning(cluster = cl) \%>\%
 rf_spatial(cluster = cl) \%>\%
 rf_evaluate(cluster = cl) \%>\%
 rf_jackknife(cluster = cl)

#automatic variable selection with jackknife
rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
 jackknife = TRUE,
 n.cores = 1
)

#variable selection with preference order
rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
preference.order = c(
  "climate_bio5_average",
  "climate_hypervolume",
  "human_population_density"
),
n.cores = 1
)

#variable selection with preference order and jackknife
rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
 preference.order = c(
   "climate_bio5_average",
   "climate_hypervolume",
   "human_population_density"
 ),
 jackknife = TRUE,
 n.cores = 1
)

#preference order, jackknife, and repetitions
#for more robust estimates of importance but higher computational cost
rf.selection <- rf_select(
 data = ecoregions_df,
 dependent.variable.name = ecoregions_depvar_name,
 predictor.variable.names = ecoregions_predvar_names,
 preference.order = c(
   "climate_bio5_average",
   "climate_hypervolume",
   "human_population_density"
 ),
jackknife = TRUE,
 repetitions = 10,
n.cores = 1
)

}

}
