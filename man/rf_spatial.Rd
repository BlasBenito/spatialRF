% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_spatial.R
\name{rf_spatial}
\alias{rf_spatial}
\title{Fits spatial random forest models}
\usage{
rf_spatial(
  model = NULL,
  data = NULL,
  dependent.variable.name = NULL,
  predictor.variable.names = NULL,
  distance.matrix = NULL,
  distance.thresholds = NULL,
  ranger.arguments = NULL,
  scaled.importance = TRUE,
  repetitions = 1,
  keep.models = FALSE,
  method = c("mem.moran.sequential", "mem.effect.sequential", "mem.effect.recursive",
    "hengl", "hengl.moran.sequential", "hengl.effect.sequential",
    "hengl.effect.recursive", "pca.moran.sequential", "pca.effect.sequential",
    "pca.effect.recursive"),
  max.spatial.predictors = NULL,
  weight.r.squared = NULL,
  weight.penalization.n.predictors = NULL,
  seed = NULL,
  verbose = TRUE,
  n.cores = parallel::detectCores() - 1,
  cluster.ips = NULL,
  cluster.cores = NULL,
  cluster.user = Sys.info()[["user"]],
  cluster.port = "11000"
)
}
\arguments{
\item{model}{A model produced by \code{\link[=rf]{rf()}} or \code{\link[=rf_repeat]{rf_repeat()}}. If used, the arguments \code{data}, \code{dependent.variable.name}, \code{predictor.variable.names}, \code{distance.matrix}, \code{distance.thresholds}, \code{ranger.arguments}, and \code{scaled.importance} are taken directly from the model definition. Default: NULL}

\item{data}{Data frame with a response variable and a set of predictors. Default: \code{NULL}}

\item{dependent.variable.name}{Character string with the name of the response variable. Must be in the column names of \code{data}. If the dependent variable is binary with values 1 and 0, the argument \code{case.weights} of \code{ranger} is populated by the function \code{\link[=case_weights]{case_weights()}}. Default: \code{NULL}}

\item{predictor.variable.names}{Character vector with the names of the predictive variables. Every element of this vector must be in the column names of \code{data}. Default: \code{NULL}}

\item{distance.matrix}{Squared matrix with the distances among the records in \code{data}. The number of rows of \code{distance.matrix} and \code{data} must be the same. If not provided, the computation of the Moran's I of the residuals is omitted. Default: \code{NULL}}

\item{distance.thresholds}{Numeric vector, distances below each value are set to 0 on separated copies of the distance matrix for the computation of Moran's I at different neighborhood distances. If \code{NULL}, it defaults to \code{seq(0, max(distance.matrix)/4, length.out = 2)}. Default: \code{NULL}}

\item{ranger.arguments}{Named list with \link[ranger]{ranger} arguments (other arguments of this function can also go here). All \link[ranger]{ranger} arguments are set to their default values except for 'importance', that is set to 'permutation' rather than 'none'. Please, consult the help file of \link[ranger]{ranger} if you are not familiar with the arguments of this function.}

\item{scaled.importance}{Logical. If \code{TRUE}, and 'importance = "permutation', the function scales 'data' with \link[base]{scale} and fits a new model to compute scaled variable importance scores. Default: \code{TRUE}}

\item{repetitions}{Integer, number of repetitions. If 1, \code{\link[=rf]{rf()}} is used to fit the non-spatial and spatial models. If higher than one, \code{\link[=rf_repeat]{rf_repeat()}} is used instead. Notice that using more than one repetition can get computationally costly if the selected method generated a large number of spatial predictors, as it is the case of the "hengl" method. Default: \code{1}}

\item{keep.models}{Logical. If \code{TRUE}, the fitted models are returned in the "models" slot. If \code{repetitions} is very high and \code{method} is "hengl",
setting \code{keep.models} to \code{TRUE} may cause memory issues. Default: \code{FALSE}}

\item{method}{Character, method to build, rank, and select spatial predictors. One of:
\itemize{
\item "hengl"
\item "hengl.moran.sequential"  (experimental)
\item "hengl.effect.sequential" (experimental)
\item "hengl.effect.recursive"  (experimental)
\item "pca.moran.sequential"    (experimental)
\item "pca.effect.sequential"   (experimental)
\item "pca.effect.recursive"    (experimental)
\item "mem.moran.sequential"
\item "mem.effect.sequential"
\item "mem.effect.recursive"
}}

\item{max.spatial.predictors}{Integer, maximum number of spatial predictors to generate. Useful when memory problems arise due to a large number of spatial predictors, Default: \code{NULL}}

\item{weight.r.squared}{Numeric between 0 and 1, weight of R-squared in the selection of spatial components. See Details, Default: \code{NULL}}

\item{weight.penalization.n.predictors}{Numeric between 0 and 1, weight of the penalization for adding an increasing number of spatial predictors during selection. Default: \code{NULL}}

\item{seed}{Integer, random seed to facilitate reproducibility. If set to a given number, the returned model is always the same. Only relevant if \code{repetitions = 1}. Default: \code{NULL}}

\item{verbose}{Logical. If TRUE, messages and plots generated during the execution of the function are displayed, Default: \code{TRUE}}

\item{n.cores}{Integer, number of cores to use. Default = \code{parallel::detectCores() - 1}}

\item{cluster.ips}{Character vector with the IPs of the machines in a cluster. The machine with the first IP will be considered the main node of the cluster, and will generally be the machine on which the R code is being executed.}

\item{cluster.cores}{Numeric integer vector, number of cores to use on each machine.}

\item{cluster.user}{Character string, name of the user (should be the same throughout machines). Defaults to the current system user.}

\item{cluster.port}{Character, port used by the machines in the cluster to communicate. The firewall in all computers must allow traffic from and to such port. Default: \code{"11000"}}
}
\value{
A ranger model with several new slots:
\itemize{
\item \code{ranger.arguments}: Values of the arguments used to fit the ranger model.
\item \code{variable.importance}: A list containing the vector of variable importance as originally returned by ranger (scaled or not depending on the value of 'scaled.importance'), a data frame with the predictors ordered by their importance, and a ggplot showing the importance values.
\item \code{performance}: With the out-of-bag R squared, pseudo R squared, RMSE and NRMSE of the model.
\item \code{spatial.correlation.residuals}: Result of \code{\link[=moran_multithreshold]{moran_multithreshold()}} applied in the model residuals.
\item \code{selection.spatial.predictors}: A list with four slots:
\itemize{
\item \code{method}: Character, method used to generate, rank, and select spatial predictors.
\item \code{names}: Character vector with the names of the selected spatial predictors. Not returned if the method is "hengl".
\item \code{optimization}: Criteria used to select the spatial predictors. Not returned if the method is "hengl".
\item \code{plot}: Plot of the criteria used to select the spatial predictors. Not returned if the method is "hengl".
}
}
}
\description{
Fits spatial random forest models using different methods to generate, rank, and select spatial predictors. The end goal is to provide the model with information about the spatial structure of the data in order to minimize the spatial correlation (Moran's I) of the model residuals.
}
\details{
The function uses three different methods to generate spatial predictors ("hengl", "pca", and "mem"), two methods to rank them in order to define in what order they are introduced in the model ("effect" and "moran), and two methods to select the spatial predictors that minimize the spatial correlation of the model residuals ("sequential" and "recursive"). All method names but "hengl" (that uses the complete distance matrix as predictors in the spatial model) are named by combining a method to generate the spatial predictors, a method to rank them, and a method to select them, separated by a point. Examples are "mem.moran.sequential" or "mem.effect.recursive". All combinations are not possible, since the ranking method "moran" cannot be used with the selection method "recursive" (because the logics behind them are very different, see below).
Methods to generate spatial predictors:
\itemize{
\item \code{"hengl"}: named after Tomislav Hengl and the paper \href{https://peerj.com/articles/5518/}{Hengl et al. (2018)}, where the authors propose to use the distance matrix among records as predictors in spatial random forest models (RFsp method). In this function, all methods starting with "hengl" use either the complete distance matrix, or select columns of the distance matrix as spatial predictors.
\item \code{"mem"}: Generates Moran's Eigenvector Maps, that is, the eigenvectors of the double-centered weights of the distance matrix. The method is described in \href{https://www.sciencedirect.com/science/article/abs/pii/S0304380006000925}{Dray, Legendre and Peres-Neto (2006)} and \href{https://royalsocietypublishing.org/doi/10.1098/rspb.2013.2728}{Legendre and Gauthier (2014)}.
\item \code{"pca"}: Computes spatial predictors from the principal component analysis of a weighted distance matrix (see \code{\link[=weights_from_distance_matrix]{weights_from_distance_matrix()}}). This is an experimental method, use with caution.
}
Methods to rank spatial predictors (see \code{\link[=rank_spatial_predictors]{rank_spatial_predictors()}}):
\itemize{
\item \code{"moran"}: Computes the Moran's I of each spatial predictor, selects the ones with positive values, and ranks them from higher to lower Moran's I.
\item \code{"effect"}: If a given non-spatial random forest model is defined as \code{y = p1 + ... + pn}, being \code{p1 + ... + pn} the set of predictors, for every spatial predictor generated (\code{spX}) a spatial model \code{y = p1 + ... + pn + spX} is fitted, and the Moran's I of its residuals is computed. The spatial predictors are then ranked by how much they help to reduce spatial autocorrelation between the non-spatial and the spatial model.
}
Methods to select spatial predictors:
\itemize{
\item \code{"sequential"} (see \code{\link[=select_spatial_predictors_sequential]{select_spatial_predictors_sequential()}}): The spatial predictors are added one by one in the order they were ranked, and once all spatial predictors are introduced, the best first n predictors are selected. This method is similar to the one employed in the MEM methodology (Moran's Eigenvector Maps) described in \href{https://www.sciencedirect.com/science/article/abs/pii/S0304380006000925}{Dray, Legendre and Peres-Neto (2006)} and \href{https://royalsocietypublishing.org/doi/10.1098/rspb.2013.2728}{Legendre and Gauthier (2014)}. This method generally introduces tens of predictors into the model, but usually offers good results.
\item \code{"recursive"} (see \code{\link[=select_spatial_predictors_recursive]{select_spatial_predictors_recursive()}}): This method tries to find the smallest combination of spatial predictors that reduce the spatial correlation of the model's residuals the most. The algorithm goes as follows: 1. The first ranked spatial predictor is introduced into the model; 2. the remaining predictors are ranked again using the "effect" method, using the model in 1. as reference. The first spatial predictor in the resulting ranking is then introduced into the model, and the steps 1. and 2. are repeated until spatial predictors stop having an effect in reducing the Moran's I of the model residuals. This method takes longer to compute, but generates smaller sets of spatial predictors. This is an experimental method, use with caution.
}
Once ranking procedure is completed, an algorithm is used to select the minimal subset of spatial predictors that reduce the most the Moran's I of the residuals: for each new spatial predictor introduced in the model, the Moran's I of the residuals, it's p-value, a binary version of the p-value (0 if < 0.05 and 1 if >= 0.05), the R-squared of the model, and a penalization linear with the number of spatial predictors introduced (computed as \verb{(1 / total spatial predictors) * introduced spatial predictors}) are rescaled between 0 and 1. Then, the optimization criteria is computed as \verb{max(1 - Moran's I, p-value binary) + (weight.r.squared * R-squared) - (weight.penalization.n.predictors * penalization)}. The predictors from the first one to the one with the highest optimization criteria are then selected as the best ones in reducing the spatial correlation of the model residuals, and used along with \code{data} to fit the final spatial model.
}
\examples{
\donttest{
if(interactive()){

 data(distance_matrix)
 data(plant_richness_df)
 data <- plant_richness_df
 dependent.variable.name <- "richness_species_vascular"
 predictor.variable.names <- colnames(plant_richness_df)[5:21]
 distance.matrix <- distance_matrix
 distance.thresholds <- c(0, 500, 1000)

 #hengl
 model <- rf_spatial(
   data = data,
   dependent.variable.name = dependent.variable.name,
   predictor.variable.names = predictor.variable.names,
   distance.matrix = distance.matrix,
   distance.thresholds = distance.thresholds,
   method = "hengl"
 )

 #mem.moran.sequential
 model <- rf_spatial(
   data = data,
   dependent.variable.name = dependent.variable.name,
   predictor.variable.names = predictor.variable.names,
   distance.matrix = distance.matrix,
   distance.thresholds = distance.thresholds,
   method = "mem.moran.sequential",
   seed = 10
 )

 #fitting an rf_spatial model from an rf model
 rf.model <- rf(
   data = plant_richness_df,
   dependent.variable.name = "richness_species_vascular",
   predictor.variable.names = colnames(plant_richness_df)[5:21],
   distance.matrix = distance_matrix,
   distance.thresholds = c(0, 1000, 2000)
 )
 rf.model$spatial.correlation.residuals$plot

 rf.spatial <- rf_spatial(model = rf.model)
 rf.spatial$spatial.correlation.residuals$plot

 #fitting an rf_spatial model from an rf_repeat model
 rf.repeat <- rf_repeat(
   data = plant_richness_df,
   dependent.variable.name = "richness_species_vascular",
   predictor.variable.names = colnames(plant_richness_df)[5:21],
   distance.matrix = distance_matrix,
   distance.thresholds = c(0, 1000, 2000),
   repetitions = 5
 )
 rf.repeat$spatial.correlation.residuals$plot

 rf.spatial <- rf_spatial(model = rf.repeat)
 rf.spatial$spatial.correlation.residuals$plot

}
}
}
