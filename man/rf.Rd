% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf.R
\name{rf}
\alias{rf}
\title{rf}
\usage{
rf(
  data = NULL,
  dependent.variable.name = NULL,
  predictor.variable.names = NULL,
  distance.matrix = NULL,
  distance.thresholds = NULL,
  ranger.arguments = NULL,
  trees.per.variable = NULL,
  scaled.importance = TRUE,
  seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{data}{(required) data frame with a response variable and a set of (preferably uncorrelated) predictors, Default: NULL}

\item{dependent.variable.name}{(required) string with the name of the response variable. Must be in the column names of 'data', Default: NULL}

\item{predictor.variable.names}{(required) character vector with the names of the predictive variables. Every element must be in the column names of 'data', Default: NULL}

\item{distance.matrix}{(optional) a squared matrix with the distances among the records in 'data'. Notice that the rows of 'distance.matrix' and 'data' must be the same. If not provided, the computation of the Moran's I of the residuals is ommited. Default: NULL``}

\item{distance.thresholds}{(optional) numeric vector, distances below each value in the distance matrix are set to 0 for the computation of Moran's I. If NULL, it defaults to seq(0, max(distance.matrix), length.out = 4). Default: NULL.}

\item{ranger.arguments}{(optional) list with \link[ranger]{ranger} arguments (other arguments of this function can also go here). All \link[ranger]{ranger} arguments are set to their default values except for 'importance', that is set to 'permutation' rather than 'none'. Please, consult the help file of \link[ranger]{ranger} if you are not familiar with the arguments of this function.}

\item{trees.per.variable}{(optional) number of individual regression trees to fit per variable in 'predictor.variable.names'. This is an alternative way to define ranger's 'num.trees'. If NULL, 'num.trees' is 500. Default: NULL}

\item{scaled.importance}{(optional) boolean. If TRUE, and 'importance = "permutation', the function scales 'data' with \link{scale_robust} and fits a new model to compute scaled variable importance scores. Default: TRUE}

\item{seed}{(optional) integer, random seed to facilitate reproducibility. If set to a given number, the returned model is always the same. Default: NULL}

\item{verbose}{Boolean. If TRUE, messages and plots generated during the execution of the function are displayed, Default: TRUE}
}
\value{
a ranger model with several new slots:
\itemize{
\item \code{ranger.arguments}: stores the values of the arguments used to fit the ranger model.
\item \code{variable.importance}: a list containing a data frame with the predictors ordered by their importance, and a ggplot showing the importance values.
\item \code{pseudo.r.squared}: computed as the correlation between the observations and the predictions.
\item \code{rmse}: as computed by \link{root_mean_squared_error} with 'normalization = NULL'.
\item \code{nrmse}: as computed by \link{root_mean_squared_error} with 'normalization = "iq'.
\item \code{residuals}: computed as observations minus predictions.
\item \code{spatial.correlation.residuals}: the result of \link{moran_multithreshold}.
}
}
\description{
a convenient wrapper for \link[ranger]{ranger} that completes its output by providing the Moran's I of the residuals for different distance thresholds, the rmse and nrmse (as computed by \link{root_mean_squared_error}), and variable importance scores based on a scaled version of the data generated by \link{scale_robust}.
}
\details{
Please read the help file of \link[ranger]{ranger} for further details. Notice that the \code{formula} interface of \link[ranger]{ranger} is supported through \code{ranger.arguments}, interactions are not allowed. If you need to consider interactions in your model, add them explicitly as new columns in \code{data} as in \code{data$x_y <- data$x * data$y}.
}
\examples{
\dontrun{
if(interactive()){
 data("plant_richness_df")
 data("distance_matrix")

 out <- rf(
   data = plant_richness_df,
   dependent.variable.name = "richness_species_vascular",
   predictor.variable.names = colnames(plant_richness_df)[5:21],
   distance.matrix = distance_matrix,
   distance.thresholds = c(0, 100, 1000, 10000)
 )

 class(out)

 #data frame with ordered variable importance
 out$variable.importance$per.variable

 #variable importance plot
 out$variable.importance$plot

 #pseudo R-squared
 out$pseudo.r.squared

 #rmse and nrmse
 out$rmse
 out$nrmse

 #spatial correlation of the residuals for different distance thresholds
 out$spatial.correlation.residuals$df

 #plot of the Moran's I of the residuals for different distance thresholds
 out$spatial.correlation.residuals$plot

 #alternative data input methods
 ###############################

 #ranger.arguments can contain ranger arguments and any other rf argument
 my.arguments <- list()
 my.arguments$data <- plant_richness_df
 my.arguments$dependent.variable.name <- "richness_species_vascular"
 my.arguments$predictor.variable.names <- colnames(plant_richness_df)[8:21]
 my.arguments$distance.matrix <- distance_matrix
 my.arguments$distance.thresholds <- c(0, 100, 1000)
 out <- rf(ranger.arguments = my.arguments)

 #the formula input method of ranger is supported (requires 'data')
 #variable interactions are not supported by this interface
 out <- rf(
   data = plant_richness_df,
   ranger.arguments = list(
     formula = as.formula(
     "richness_species_vascular ~
     climate_hypervolume +
     climate_velocity_lgm_average +
     neighbors_count +
     neighbors_percent_shared_edge"
     )
   )
 )

 #the x and y interface is also supported (the name of the response variable is converted to "y")
 out <- rf(
   ranger.arguments = list(
     y = plant_richness_df$richness_species_vascular,
     x = plant_richness_df[, 5:21]
     )
   )
 }
}
}
